import { useState } from "react"

export default function ModalAyuda({ isOpen, onClose }) {
  if (!isOpen) return null

  const overlayStyle = {
    position: 'fixed',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    zIndex: 1000
  }

  const modalStyle = {
    backgroundColor: 'white',
    borderRadius: '12px',
    padding: '32px',
    maxWidth: '800px',
    maxHeight: '80vh',
    overflow: 'auto',
    boxShadow: '0 20px 25px -5px rgba(0, 0, 0, 0.1)',
    position: 'relative'
  }

  const headerStyle = {
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: '24px',
    borderBottom: '2px solid #f3f4f6',
    paddingBottom: '16px'
  }

  const titleStyle = {
    fontSize: '1.5rem',
    fontWeight: 'bold',
    color: '#1f2937'
  }

  const closeButtonStyle = {
    backgroundColor: '#ef4444',
    color: 'white',
    border: 'none',
    borderRadius: '50%',
    width: '32px',
    height: '32px',
    cursor: 'pointer',
    fontSize: '18px',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center'
  }

  const sectionStyle = {
    marginBottom: '24px',
    padding: '20px',
    borderRadius: '8px',
    border: '1px solid #e5e7eb'
  }

  const sectionTitleStyle = {
    fontSize: '1.25rem',
    fontWeight: '600',
    marginBottom: '12px',
    display: 'flex',
    alignItems: 'center',
    gap: '8px'
  }

  const sectionContentStyle = {
    fontSize: '0.95rem',
    lineHeight: '1.6',
    color: '#4b5563'
  }

  return (
    <div style={overlayStyle} onClick={onClose}>
      <div style={modalStyle} onClick={(e) => e.stopPropagation()}>
        <div style={headerStyle}>
          <h2 style={titleStyle}>ðŸ“‹ GuÃ­a del Organizador de Archivos</h2>
          <button style={closeButtonStyle} onClick={onClose}>
            âœ•
          </button>
        </div>

        <div style={sectionStyle}>
          <h3 style={{...sectionTitleStyle, color: '#2563eb'}}>
            ðŸ“„ Proceso de Entrada
          </h3>
          <p style={sectionContentStyle}>
            En este proceso, se crean carpetas basadas en el nÃºmero de ficha, que corresponde al nombre del PDF. 
            Todos los juicios generados se almacenan dentro de la carpeta que tiene el mismo nÃºmero de ficha, 
            facilitando la organizaciÃ³n y el acceso a los documentos relacionados.
          </p>
          <div style={{marginTop: '12px', padding: '8px', backgroundColor: '#eff6ff', borderRadius: '4px'}}>
            <strong>Ejemplo:</strong> Si tienes un PDF llamado "12345_Juan_Perez.pdf", se crearÃ¡ una carpeta "12345" 
            donde se almacenarÃ¡n todos los documentos relacionados.
          </div>
        </div>

        <div style={sectionStyle}>
          <h3 style={{...sectionTitleStyle, color: '#059669'}}>
            ðŸ“Š Proceso Intermedio
          </h3>
          <p style={sectionContentStyle}>
            DespuÃ©s de generar todos los archivos Excel con los datos, estos se guardan en una carpeta especÃ­fica. 
            Posteriormente, los Excel se distribuyen en subcarpetas de fichas, asegurando que cada archivo se almacene 
            en la carpeta correspondiente al nÃºmero de ficha, lo que optimiza la gestiÃ³n de la informaciÃ³n.
          </p>
          <div style={{marginTop: '12px', padding: '8px', backgroundColor: '#f0fdf4', borderRadius: '4px'}}>
            <strong>FunciÃ³n:</strong> Toma los archivos Excel generados y los organiza automÃ¡ticamente en las carpetas 
            de fichas correspondientes, manteniendo la estructura organizacional.
          </div>
        </div>

        <div style={sectionStyle}>
          <h3 style={{...sectionTitleStyle, color: '#7c3aed'}}>
            ðŸ“¥ Proceso Final
          </h3>
          <p style={sectionContentStyle}>
            Una vez completado el proceso con los juicios, este paso extrae los juicios de las carpetas y les asigna 
            un sufijo "_OK" a aquellos que solo contienen en su nombre el formato 'FICHA + NOMBRES Y APELLIDOS DE INSTRUCTOR'. 
            Si el nombre del archivo termina con un guion bajo (_), se le aÃ±ade la etiqueta 'REPETIDO', lo que ayuda a 
            identificar archivos duplicados o con problemas de nomenclatura.
          </p>
          <div style={{marginTop: '12px', padding: '8px', backgroundColor: '#faf5ff', borderRadius: '4px'}}>
            <strong>Resultado:</strong>
            <ul style={{margin: '8px 0', paddingLeft: '20px'}}>
              <li>Archivos correctos: "12345_Juan_Perez_OK.pdf"</li>
              <li>Archivos repetidos: "12345_Juan_Perez_REPETIDO.pdf"</li>
            </ul>
          </div>
        </div>

        <div style={{
          marginTop: '24px', 
          padding: '16px', 
          backgroundColor: '#f9fafb', 
          borderRadius: '8px',
          textAlign: 'center'
        }}>
          <p style={{margin: 0, color: '#6b7280', fontSize: '0.9rem'}}>
            ðŸ’¡ <strong>Tip:</strong> Ejecuta los procesos en orden: Entrada â†’ Intermedio â†’ Final para obtener los mejores resultados.
          </p>
        </div>
      </div>
    </div>
  )
}